@using MonoGame.Forms.NET.Controls;
@using MonoGame.Forms.NET.Samples.Tests.Container;

@page "/multiple"

@inject MonoGameControlPanel ControlPanel

<div class="alert alert-info" role="alert">
    [Left Mouse Button] Move Cam <br/>
    [Right Mouse Button] Debug Display<br />
    [Middle Mouse Button] Reset Cam<br />
    [XButton1] Previous Map<br />
    [XButton2] Next Map<br />
    [Mouse Wheel] Zoom Cam<p />
    Images copyright (c) by FinTerra<br />
    Tile Art copyright (c) by Pixel32<p />
    OpenGameArt.org<p />
    Attribution 3.0 Unported (CC BY 3.0)
</div>

<style>
    body {
        background-color: @BackgroundColor;
    }
</style>

@code {
    public MonoGameControl Control { get; set; }
    public string BackgroundColor = Color.CornflowerBlue.Name;

    protected override void OnInitialized()
    {
        var container = ControlPanel.InitializeMonoGameControl(MonoGameControlPanel.ControlKeys.Multiple) as SplitContainer;
        Control = container.Panel1.Controls[0] as MonoGameControl;
        if (Control != null && Control.Editor != null)
        {
            Color color = Color.FromArgb(
                Control.Editor.BackgroundColor.A,
                Control.Editor.BackgroundColor.R,
                Control.Editor.BackgroundColor.G,
                Control.Editor.BackgroundColor.B);

            BackgroundColor = ColorTranslator.ToHtml(color);
        }
        base.OnInitialized();
    }
}
